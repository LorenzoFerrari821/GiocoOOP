class ConnectionDB
!!!130946.java!!!	ConnectionDB()
		Class.forName("org.sqlite.JDBC");
		connection = DriverManager.getConnection(
				"jdbc:sqlite:Salvataggi.db");  
		statement = connection.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
		statement.setQueryTimeout(30);  
!!!131074.java!!!	closeConnection() : void
		if (connection != null)
			try {	
				statement.close();
				connection.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}	   
!!!131202.java!!!	crea() : void
		try {
			statement.executeUpdate("CREATE TABLE IF NOT EXISTS Salvataggi (Data VARCHAR(15),NomeGiocatore VARCHAR(30),Tutorial CHAR(2),Difficoltà VARCHAR(10),Mappa VARCHAR(10),Civiltà VARCHAR(20),Turno INTEGER,"
					+ "Epoca VARCHAR(20),Oro INTERGER,Materiali INTEGER,Punti_Ricerca INTEGER,Codice INTEGER primary key)");  //Creiamo la tabella solo se non esiste
		} catch (SQLException e) {
			e.printStackTrace();
			pnlerror = new JPanel();
			pnlerror.setBackground(Color.WHITE);
			JOptionPane.showMessageDialog(pnlerror,Global.getLabels("e1"),Global.getLabels("e2"), JOptionPane.ERROR_MESSAGE);
		}
!!!131330.java!!!	creaTabellaPartita() : void
		try {
			statement.executeUpdate("CREATE TABLE IF NOT EXISTS StringaPartita (Stringa VARCHAR(1000),Codice INTEGER,FOREIGN KEY(Codice) REFERENCES Salvataggi(Codice) ON DELETE CASCADE)");  //Creiamo la tabella solo se non esiste
		} catch (SQLException e) {
			e.printStackTrace();
		}
!!!131458.java!!!	init(in nome : String, in tutorial : String, in difficolta : String, in mappa : String, in civilta : String, in codice : int) : int
		try {
			prestatement = connection.prepareStatement("INSERT INTO Salvataggi VALUES(?,?,?,?,?,?,0,'Classica',0,0,0,?)");    //Permette di specificare i parametri col punto di domanda in seguito
			//Settiamo i parametri
			LocalDate localDate = LocalDate.now();
			prestatement.setString(1,localDate.toString() );
			prestatement.setString(2,nome);
			prestatement.setString(3,tutorial);
			prestatement.setString(4,difficolta);
			prestatement.setString(5, mappa);
			prestatement.setString(6, civilta);
			prestatement.setInt(7, codice);
			prestatement.executeUpdate();        //Adesso eseguiamo
		} catch (SQLException e) {
			e.printStackTrace();
			pnlerror = new JPanel();
			pnlerror.setBackground(Color.WHITE);
			JOptionPane.showMessageDialog(pnlerror,Global.getLabels("e1"),Global.getLabels("e2"), JOptionPane.ERROR_MESSAGE);
			return -1;
		}
		return 1;
!!!131586.java!!!	creaSalvataggioStringa(in stringa : String, in codice : int) : void
		try {
			prestatement = connection.prepareStatement("INSERT INTO StringaPartita VALUES(?,?)"); 
			prestatement.setString(1,stringa);
			prestatement.setInt(2,codice);;
			prestatement.executeUpdate();        //Adesso eseguiamo
		} catch (SQLException e) {
			e.printStackTrace();
		}	
!!!131714.java!!!	executeQuery() : ResultSet
		return statement.executeQuery("SELECT * FROM Salvataggi ORDER BY Data DESC");
!!!131842.java!!!	executeQuery2() : ResultSet
		return statement.executeQuery("SELECT * FROM StringaPartita"); 
!!!131970.java!!!	getCodiceMax() : ResultSet

		return statement.executeQuery("SELECT ifnull(MAX(Codice),-1) FROM Salvataggi");
!!!132098.java!!!	elimina(in index : int) : void
		try {
			rs=this.executeQuery();
			while(rs.getRow()!=index)
				rs.next();                              
			prestatement = connection.prepareStatement("DELETE FROM Salvataggi WHERE (Codice = ?)"); 
			prestatement.setInt(1, rs.getInt("Codice"));
			prestatement.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			pnlerror = new JPanel();
			pnlerror.setBackground(Color.WHITE);
			JOptionPane.showMessageDialog(pnlerror, Global.getLabels("e8"),Global.getLabels("e2"), JOptionPane.ERROR_MESSAGE);
		}
!!!132226.java!!!	caricaStringa(in index : int) : String
		try {
			rs=this.executeQuery();
			while(rs.getRow()!=index)
				rs.next();    
			codice=rs.getInt("Codice");
			rs=this.executeQuery2();
			while(rs.getInt("Codice")!=codice)
				rs.next();
			return rs.getString("Stringa");  
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;   //In caso di errore
